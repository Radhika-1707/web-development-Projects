`wCat is a partial synchronous clone of cat command available in bash but not in windows cmd.
It has two main features:
   1-To display a text file.(single or multiple)
   2-To combine copies of text file.(extension of 1)
General Syntax:
cat[options][files]

output generated by script is inserted into a file by override by single arrow

output generated by script is inserted into a file by append by double arrow

the command before > and >> is only executed

option to remove big line break(-s)
option to add line number to non empty lines(-b)
option to add line numbers to all lines(-n)`

#!/usr/bin/env node  //shebang line(for global command)
let fs=require('fs');
(function(){
let cmd=process.argv.slice(2);
let options=[]
let files=[]
let str=``
for(let i=0; i<cmd.length;i++){
    if(cmd[i].startsWith("-")){
        options.push(cmd[i])
    }
    else{
        files.push(cmd[i])
    }
}
for(let j=0; j<files.length; j++){
if(fs.existsSync(files[j])){
    str+=fs.readFileSync(files[j]).toString();
}
else{
    console.log("invalid file");
    return;
}
}
str=str.split("\n")
if(options.includes("-s")){
    str=removeLargeSpaces(str) //removes larges space string
}
if(options.includes("-n") && options.includes("-b")){
if(options.indexOf("-n")>options.indexOf("-b")){
    //use -b
    str=addNonEmptyNum(str);
}
else{
    //use -n
    str= addAllNum(str);
}
}else{
    //either one is present or none is present
    if(options.indexOf("-n")){
        //use -n
        str= addAllNum(str);

    }
    if(options.indexOf("-b")){
        //use -b
        str=addNonEmptyNum(str);
    }

}


str=str.join("\n")
console.log(str)
})();
function removeLargeSpaces(arr){
let y=[]
let flag=false
for(let i=0;i<arr.length;i++){
    if(arr[i]==='' || arr[i]=='\r'){
        if(flag===true){                                                                                                                                                                                                                                                                                                                       
            continue;
        }else{
            y.push(arr[i])
            flag=true
        }
    }else{
        y.push(arr[i])
        flag=false
    }
}
return y;
}
//-n
function addAllNum(arr){
    let lineNumber=1;
    for(let i=0;i<arr.length;i++){
        arr[i]=lineNumber+" "+arr[i];
        lineNumber++;

    }
    return arr;
}
//-b
function addNonEmptyNum(arr){
    let lineNumber=1;
    for(let i=0;i<arr.length;i++){
        if(arr[i]!=="" && arr[i]!=="\r"){
            arr[i]=lineNumber+" "+arr[i];
            lineNumber++;
        }
    }
    return arr;

}